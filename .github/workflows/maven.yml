# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    #checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    #Cache Maven Dependencies
    - name: Cache Maven Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven

    #Install Maven and run tests
    - name: Build and Test with Maven
      run: mvn clean install
      working-directory: D:/Recovery/Weblogic_Notes/SpBoot/apiTesting

    #Generate code coverage report using JaCoCo
    - name: Code Coverage Report
      run: mvn jacoco:report

    #Upload test results and coverage reports
    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: target/surefire-reports/

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: target/site/jacoco/
